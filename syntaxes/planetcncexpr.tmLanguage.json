{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "PlanetCNC Expression",
	"scopeName": "source.expression",
	"patterns": [
		{
			"include": "#sections"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#cmdline"
		}
	],
	"repository": {
		"cmdlinekeyvalues": {
			"patterns": [
				{
					"begin": "\\s+",
					"end": "\\s+|$",
					"name": "support.other",
					"patterns": [
						{
							"include": "#strings2"
						},
						{
							"begin": "(\\w+)(\\=)",
							"beginCaptures": {
								"1":{
									"name":"support.type.property-name"
								},
								"2": {
									"name": "support.type.property-name.less"
								}
							},
							"end": "\\s+|$",
							"patterns": [
								{
									"include": "#strings2"
								}
							]
						}
					]
				}
			]
		},
		"cmdline": {
			"patterns": [
				{
					"name": "entity.name.tag",
					"begin": "^cmd:",
					"beginCaptures": {
						"0": {
							"name": "markup.bold"
						}
					},
					"end": "$",
					"patterns": [
						{
							"include": "#cmdlinekeyvalues"
						}
					]
				},
				{
					"name": "comment.block",
					"begin": "(^expr:)",
					"beginCaptures": {
						"0": {
							"name": "invalid"
						}
					},
					"end": "$",
					"patterns": [
						{
							"include": "#cmdlinekeyvalues"
						}
					]
				},
				{
					"name": "invalid",
					"match": "^(-{3})"
				},
				{
					"name": "invalid",
					"match": "^(\\*{3})"
				}
			]
		},
		"sections": {
			"patterns": [
				{
					"name": "entity.name.class",
					"beginCaptures": {
						"0": {
							"name": "markup.heading"
						}
					},
					"begin": "(?:^\\s*)#(\\w+)\\s*$",
					"end": "^\\s*(?=#|\\z)",
					"patterns": [
						{
							"include": "#any-nested"
						}
					]
				},
				{
					"name": "markup.inserted",
					"begin": "^\\s*(#\\w+)\\b\\s*$",
					"end": "^\\s*(?=#|\\z)",
					"beginCaptures": {
						"0": {
							"name": "strong"
						}
					},
					"patterns": [
						{
							"include": "#any-nested"
						}
					]
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line",
					"match": ";.+$"
				}
			]
		},
		"functions": {
			"name": "keyword.control.loop",
			"patterns": [
				{
					"name": "entity.name.function",
					"begin": "(?i)\\b(\\w+)\\b\\s*\\(",
					"end": "\\s*\\)",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.expression"
						}
					},
					"patterns": [
						{
							"include": "#functions"
						},
						{
							"include": "#operators"
						},
						{
							"include": "#numeric"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#comments"
						},
						{
							"include": "#variables"
						}
					]
				}
			]
		},
		"any-nested": {
			"patterns": [
				{
					"include": "#functions"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#numeric"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#variables"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator",
					"match": "(-|!|~|\\+|-|\\*|\\/|%|\\^|\\=|>|>=|<|<=|==|!=|\\&\\&|\\|\\|\\^\\^|&|\\||<<|>>)"
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "(?i)\\b(nan|pi|e)\\b"
				},
				{
					"name": "constant.numeric",
					"match": "[+|-]?[0-9]?\\.?[0-9]+"
				}
			]
		},
		"strings": {
			"name": "string.quoted",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "string.quoted.single",
					"match": "[^']*"
				}
			]
		},
		"strings2": {
			"name": "string.quoted",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "string.quoted.double",
					"match": "[^\"]*"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "meta.parameter.type.variable",
					"match": "(?i)_(\\w|_)+"
				},
				{
					"name": "variable.name",
					"match": "(?i)(\\w|_)+"
				}
			]
		}
	}
}